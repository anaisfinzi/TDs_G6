/**
 * 
 */
package td4;

import java.util.concurrent.Semaphore;

/**
 * Allocateur générique qui permet de gérer un pool de ressource avec le
 * principe des sémaphores.
 * 
 * Dans cet exemple, on gère une ressource n-partageable avec des sémaphores
 * 
 * 
 * @author fcamps@laas.fr
 * 
 */
public class Allocateur {
	private Semaphore nbRess;
	private boolean[] ressources;

	/**
	 * Init de l'allocateur
	 * 
	 */
	public Allocateur() {
		int n = 20;
		nbRess = new Semaphore(n);
		for (int i = 0; i < n; i++) {
			ressources[i]=false;
		}
	}

	/**
	 * Cette méthode permet de d'acquérir des ressources : P()
	 * @throws InterruptedException 
	 * 
	 * 
	 */
	public void allouer() throws InterruptedException {
		nbRess.acquire();

	}

	/**
	 * Cette méthode permet de libérer des ressources : V()
	 * 
	 */
	public void rendre() {
		// TODO

	}

}
