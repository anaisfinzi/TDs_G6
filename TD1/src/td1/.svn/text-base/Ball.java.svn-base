/**
 * 
 */
package td1;

import java.awt.Dimension;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;



/**
 * ENSICA - TD1
 * 
 * Cette classe represente la balle
 * 
 * @author fcamps
 * 
 */
class Ball
{
	private static final int XSIZE = 15; // taille balle
	private static final int YSIZE = 15; // taille balle
	private double x = 0;
	private double y = 0;
	private double dx = 1;
	private double dy = 1;
	
	// Thread qui gere la balle
	BallRunnable myThread;
	
	public void setMyThread(BallRunnable _myThread)
	{
		myThread = _myThread;
	}
	
	public BallRunnable getMyThread()
	{
		return myThread;
	}
	
	
	/**
	 *  Deplace la balle a la position suivante, en inversant sa direction
     * si elle touche l'un des bords
	 * 
	 * @param bounds
	 */
	public void move(Rectangle2D bounds)
	{
		x += dx;
		y += dy;
		
		if (x < bounds.getMinX())
		{ 
			x = bounds.getMinX();
			dx = -dx;
		}
		if (x + XSIZE >= bounds.getMaxX())
		{
			x = bounds.getMaxX() - XSIZE; 
			dx = -dx; 
		}
		if (y < bounds.getMinY())
		{
			y = bounds.getMinY(); 
			dy = -dy;
		}
		if (y + YSIZE >= bounds.getMaxY())
		{
			y = bounds.getMaxY() - YSIZE;
			dy = -dy; 
		}
	}
	
	/**
	 * Renvoie la pos de la balle
	 * 
	 * @return
	 */
	public Dimension getPosition()
	{
		Dimension dim = new Dimension();
		
		dim.setSize(x, y);
		
		return dim;
	}

	/**
      Recupere la forme de la balle a sa position courante.
	 */
	public Ellipse2D getShape()
	{
		return new Ellipse2D.Double(x, y, XSIZE, YSIZE);
	}

}
